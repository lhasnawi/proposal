//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

package org.omnetpp.queueing;

//
// TODO auto-generated module
//
simple Source3D
{
    
    
        parameters:
        @group(Queueing);
        @signal[created](type="int");
        @statistic[created](title="Number of Timeslots Created by Source";record=mean;interpolationmode=none);
  		@display("i=block/source,#808000");
        

        
		int numTimeslotsP = default(2);          		// number of Timeslots
		int timeslotSizeP @unit(Byte) = default (1500byte);   // timeslot size in bits
		int numFramesP = default(2);               		// number of Frames
		double dataRateP @unit(Gbps)= default (100Gbps); // transmission datarate 
		int wavelengthP;
		int timeslotSizeBits = convertUnit("timeslotSizeP", b);
		double timeslotDurationP @unit(s)=default(timeslotSizeBits/dataRateP);
		//double guardTimeP @unit(s) = (.001s);
		
        
        
        
       // volatile double interArrivalTimeP @unit(s) = default (1s);// default (1s) ; // time between generated jobs
       double startTime @unit(s) = default(1s); // when the module sends out the first job
       double stopTime @unit(s) = default(-1s); 		// when the module stops the job generation (-1 means no limit)
       int numJobs = default(-1);			//default(-1);// number of jobs to be generated (-1 means no limit)         

    gates:
        //inout control;
        output out;
}
