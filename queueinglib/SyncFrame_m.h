//
// Generated file, do not edit! Created by opp_msgc 4.5 from SyncFrame.msg.
//

#ifndef _QUEUEING_SYNCFRAME_M_H_
#define _QUEUEING_SYNCFRAME_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0405
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// dll export symbol
#ifndef QUEUEING_API 
#  if defined(QUEUEING_EXPORT)
#    define QUEUEING_API  OPP_DLLEXPORT
#  elif defined(QUEUEING_IMPORT)
#    define QUEUEING_API  OPP_DLLIMPORT
#  else
#    define QUEUEING_API 
#  endif
#endif


namespace queueing {

/**
 * Class generated from <tt>SyncFrame.msg</tt> by opp_msgc.
 * <pre>
 * packet SyncFrame {
 *      int frameType = 3;
 * }
 * </pre>
 */
class QUEUEING_API SyncFrame : public ::cPacket
{
  protected:
    int frameType_var;

  private:
    void copy(const SyncFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SyncFrame&);

  public:
    SyncFrame(const char *name=NULL, int kind=0);
    SyncFrame(const SyncFrame& other);
    virtual ~SyncFrame();
    SyncFrame& operator=(const SyncFrame& other);
    virtual SyncFrame *dup() const {return new SyncFrame(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getFrameType() const;
    virtual void setFrameType(int frameType);
};

inline void doPacking(cCommBuffer *b, SyncFrame& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SyncFrame& obj) {obj.parsimUnpack(b);}

}; // end namespace queueing

#endif // _QUEUEING_SYNCFRAME_M_H_
