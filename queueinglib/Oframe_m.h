//
// Generated file, do not edit! Created by opp_msgc 4.5 from Oframe.msg.
//

#ifndef _QUEUEING_OFRAME_M_H_
#define _QUEUEING_OFRAME_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0405
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// dll export symbol
#ifndef QUEUEING_API 
#  if defined(QUEUEING_EXPORT)
#    define QUEUEING_API  OPP_DLLEXPORT
#  elif defined(QUEUEING_IMPORT)
#    define QUEUEING_API  OPP_DLLIMPORT
#  else
#    define QUEUEING_API 
#  endif
#endif


namespace queueing {

/**
 * Class generated from <tt>Oframe.msg</tt> by opp_msgc.
 * <pre>
 * packet Oframe {
 *     int frameIndex;
 *     int timeslotIndex;
 *     bool frameDelayed;
 *     int newFrameIndex;
 *     int newTimeslotIndex;
 *     
 *     simtime_t totalDelayTime;    
 *     int delayCount;              
 *     
 * }
 * </pre>
 */
class QUEUEING_API Oframe : public ::cPacket
{
  protected:
    int frameIndex_var;
    int timeslotIndex_var;
    bool frameDelayed_var;
    int newFrameIndex_var;
    int newTimeslotIndex_var;
    simtime_t totalDelayTime_var;
    int delayCount_var;

  private:
    void copy(const Oframe& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Oframe&);

  public:
    Oframe(const char *name=NULL, int kind=0);
    Oframe(const Oframe& other);
    virtual ~Oframe();
    Oframe& operator=(const Oframe& other);
    virtual Oframe *dup() const {return new Oframe(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getFrameIndex() const;
    virtual void setFrameIndex(int frameIndex);
    virtual int getTimeslotIndex() const;
    virtual void setTimeslotIndex(int timeslotIndex);
    virtual bool getFrameDelayed() const;
    virtual void setFrameDelayed(bool frameDelayed);
    virtual int getNewFrameIndex() const;
    virtual void setNewFrameIndex(int newFrameIndex);
    virtual int getNewTimeslotIndex() const;
    virtual void setNewTimeslotIndex(int newTimeslotIndex);
    virtual simtime_t getTotalDelayTime() const;
    virtual void setTotalDelayTime(simtime_t totalDelayTime);
    virtual int getDelayCount() const;
    virtual void setDelayCount(int delayCount);
};

inline void doPacking(cCommBuffer *b, Oframe& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Oframe& obj) {obj.parsimUnpack(b);}

}; // end namespace queueing

#endif // _QUEUEING_OFRAME_M_H_
